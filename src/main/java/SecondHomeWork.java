public class SecondHomeWork {
    public static void main(String[] args) {
   //   invertArray();
    //   fillArray();
      // changeArray();
        fillDiagonal();

    }

    public static void invertArray() {
        /* 1. Задать целочисленный массив, состоящий из элементов 0 и 1.
        Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
        С помощью цикла и условия заменить 0 на 1, 1 на 0;*/

        int[] arr = {1, 0, 1, 0, 1, 1};
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 0) {
                arr[i] = arr[i] = 1;
            } else {
                arr[i] = arr[i] = 0;
                ;
            }
            System.out.println(arr[i]);
        }

    }

    public static void fillArray() {
        /*2. Задать пустой целочисленный массив размером 8.
        С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;*/

        int[] arr = new int[8];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = i * 3;
            System.out.println(arr[i]);
        }

    }

    public static void changeArray() {
        /*3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ]
        пройти по нему циклом, и числа меньшие 6 умножить на 2;*/

        int[] w = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for (int i = 0; i < w.length; i++) {
            if (w[i] < 6) {
                w[i] = w[i] * 2;
            }
            System.out.println(w[i]);
        }
    }

    public static void fillDiagonal() {
        /*4.  Создать квадратный двумерный целочисленный массив
         (количество строк и столбцов одинаковое), и с помощью цикла(-ов)
          заполнить его диагональные элементы единицами
           (можно только одну из диагоналей, если обе сложно).
            Определить элементы одной из диагоналей можно по следующему принципу:
             индексы таких элементов равны, то есть [0][0], [1][1], [2][2], …, [n][n];*/

        int[][] arr = new int[4][4];
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                if (arr[i] == arr[j]) arr[i][j] = 1;
                else arr[i][j] = 0;
             System.out.print(arr[i][j] + " ");
            }
            System.out.println();
        }


    }
}

/*
+ 1. Задать целочисленный массив, состоящий из элементов 0 и 1.
Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
С помощью цикла и условия заменить 0 на 1, 1 на 0;
+ 2. Задать пустой целочисленный массив размером 8.
С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;
+ 3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ]
пройти по нему циклом, и числа меньшие 6 умножить на 2;
+4.  Создать квадратный двумерный целочисленный массив
 (количество строк и столбцов одинаковое), и с помощью цикла(-ов)
 заполнить его диагональные элементы единицами
 (можно только одну из диагоналей, если обе сложно).
 Определить элементы одной из диагоналей можно по следующему принципу:
 индексы таких элементов равны, то есть [0][0], [1][1], [2][2], …, [n][n];
*/